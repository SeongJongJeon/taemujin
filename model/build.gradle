jar {
    baseName = 'model'
}

def queryDslOutput = file("src-gen/main/java")

sourceSets {
    main {
        java {
            srcDir "src-gen/main/java"
        }
    }
}

task generateQueryDSL(type: JavaCompile, group: 'build') {
    doFirst {
        if (!queryDslOutput.exists()) {
            logger.info("Creating `$queryDslOutput` directory")

            if (!queryDslOutput.mkdirs()) {
                throw new InvalidUserDataException("Unable to create `$queryDslOutput` directory")
            }
        }
    }

    source = sourceSets.main.java
    classpath = configurations.compile
    options.compilerArgs = [
            "-proc:only",
            "-processor",
            "com.mysema.query.apt.jpa.JPAAnnotationProcessor"
    ]
    destinationDir = queryDslOutput
}
build.finalizedBy(generateQueryDSL);

compileTestJava.dependsOn(generateQueryDSL)

clean {
    delete queryDslOutput
}


dependencies {
    def mybatisVersion = '3.4.4'
    def mybatisSpringVersion = '1.3.1'
    def querydslVersion = '3.7.4'
    def c3p0Version = '0.9.5.2'

    compile(project(':core')) {
        exclude group: 'javax.servlet'
    }

    testCompile("org.springframework.boot:spring-boot-starter-test")
    compile("org.springframework.boot:spring-boot-starter-data-jpa")
    compile("org.springframework.boot:spring-boot-starter-jdbc")
    compile("org.springframework.boot:spring-boot-starter-security")

    compile("com.mysema.querydsl:querydsl-core:$querydslVersion")
    compile("com.mysema.querydsl:querydsl-apt:$querydslVersion")
    compile("com.mysema.querydsl:querydsl-jpa:$querydslVersion")

//    compile("org.mybatis:mybatis:$mybatisVersion")
    compile("org.mybatis.spring.boot:mybatis-spring-boot-starter:1.3.1")

    /* DB Pool && Connector */
    compile("com.mchange:c3p0:$c3p0Version")
    compile("mysql:mysql-connector-java:6.0.6")
}